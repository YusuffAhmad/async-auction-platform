networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=pgpassword
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - custom

  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    networks:
      - custom

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - custom

  room-svc:
    image: room-svc:latest
    build:
      context: .
      dockerfile: src/RoomService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=pgpassword;Database=auctions
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=Http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - custom

  identity-svc:
    image: identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=pgpassword;Database=identity
      - VIRTUAL_HOST=id.asyncauction.com
    depends_on:
      - postgres
    networks:
      custom:
        ipv4_address: 10.5.0.200

  gateway-svc:
    image: gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - VIRTUAL_HOST=api.asyncauction.com
    networks:
      - custom

  bid-svc:
    image: bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BidDbConnection=mongodb://root:mongopw@mongodb
      - IdentityServiceUrl=http://identity-svc
      - GrpcRoom=http://room-svc:7777
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - custom

  notify-svc:
    image: notify-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7003:80
    depends_on:
      - rabbitmq
    networks:
      - custom

  invoice-svc:
    image: invoice-svc:latest
    build:
      context: .
      dockerfile: src/InvoiceService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=pgpassword;Database=invoices
      - IdentityServiceUrl=http://identity-svc
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - custom

  payment-svc:
    image: payment-svc:latest
    build:
      context: .
      dockerfile: src/PaymentService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=pgpassword;Database=payments
      - IdentityServiceUrl=http://identity-svc
      - RabbitMq__Host=rabbitmq
    ports:
      - 7005:80
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - custom

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443
    networks:
      - custom
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus-data:/prometheus  
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      custom:
        ipv4_address: 10.5.0.100

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=1dV5AXIWxfsx79rn  
    ports:
      - "3000:3000"
    networks:
      custom:
        ipv4_address: 10.5.0.101
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:
  postgres-data:
  mongodata:
